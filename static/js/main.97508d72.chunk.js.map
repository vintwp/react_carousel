{"version":3,"sources":["components/CarouselList/CarouselList.tsx","components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["CarouselList","images","itemWidth","style","transform","transition","className","map","image","index","width","src","alt","String","Carousel","state","props","frameSize","step","animationDuration","offset","infinite","handleNextClick","maxOffset","length","currentoffset","setState","Math","max","abs","setTimeout","handlePrevClick","currentOffset","offsetBySlide","min","lastPositionRealSlide","addCloneSlidesForInfinitySlider","imagesFromServer","imagesWithClones","slice","updateSlidesList","isInfinite","this","widthContainer","maxWidth","type","onClick","disabled","htmlFor","id","defaultValue","onChange","e","target","value","defaultChecked","checked","Component","App","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97508d72.chunk.js","sourcesContent":["import React from 'react';\nimport './CarouselList.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  style: {\n    transform: string,\n    transition: string,\n  }\n};\n\nexport const CarouselList: React.FC<Props> = ({\n  images,\n  itemWidth,\n  style: {\n    transform,\n    transition,\n  },\n}) => (\n  <ul\n    className=\"Carousel__list\"\n    style={{\n      transform: `${transform}`,\n      transition: `${transition}`,\n    }}\n  >\n    {images.map((image, index) => (\n      <li\n        // eslint-disable-next-line react/no-array-index-key\n        key={`${image}+${index}}`}\n        className=\"Carousel__item\"\n        style={{\n          width: `${itemWidth}px`,\n        }}\n      >\n        <img\n          src={image}\n          alt={String(index + 1)}\n        />\n      </li>\n    ))}\n  </ul>\n);\n","import { Component } from 'react';\nimport { CarouselList } from '../CarouselList';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  images: string[];\n  offset: number;\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nexport class Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    images: this.props.images,\n    itemWidth: this.props.itemWidth,\n    frameSize: this.props.frameSize,\n    step: this.props.step,\n    animationDuration: this.props.animationDuration,\n    offset: 0,\n    infinite: this.props.infinite,\n\n  };\n\n  componentDidMount(): void {\n    const { infinite } = this.props;\n\n    if (infinite) {\n      this.addCloneSlidesForInfinitySlider();\n    }\n  }\n\n  handleNextClick = (): void => {\n    const {\n      images,\n      offset,\n      infinite,\n      itemWidth,\n      step,\n      animationDuration,\n\n    } = this.state;\n    const maxOffset = !infinite\n      ? -((images.length - step) * itemWidth)\n      : -((images.length - 2 * step) * itemWidth);\n    const currentoffset = offset - step * itemWidth;\n\n    if (!infinite) {\n      this.setState({\n        offset: Math.max(maxOffset, currentoffset),\n      });\n    }\n\n    if (infinite) {\n      this.setState({\n        offset: currentoffset,\n      });\n\n      if (Math.abs(currentoffset) > Math.abs(maxOffset)) {\n        setTimeout(() => {\n          this.setState({\n            animationDuration: 0,\n            offset: (currentoffset - maxOffset),\n          }, () => {\n            setTimeout(() => {\n              this.setState({ animationDuration });\n            }, animationDuration);\n          });\n        }, animationDuration);\n      }\n    }\n  };\n\n  handlePrevClick = (): void => {\n    const {\n      offset,\n      images, itemWidth,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n    const currentOffset = offset + step * itemWidth;\n    const offsetBySlide = step * itemWidth;\n\n    if (!infinite) {\n      this.setState({\n        offset: Math.min(0, currentOffset),\n      });\n    }\n\n    if (infinite) {\n      const lastPositionRealSlide = -(images.length - 2 * step) * itemWidth;\n\n      if (currentOffset === 0) {\n        this.setState({\n          offset: Math.min(0, currentOffset),\n        });\n        setTimeout(() => {\n          this.setState({\n            animationDuration: 0,\n            offset: (lastPositionRealSlide),\n          }, () => {\n            setTimeout(() => {\n              this.setState({ animationDuration });\n            }, animationDuration);\n          });\n        }, animationDuration);\n\n        return;\n      }\n\n      if (Math.abs(offset) - offsetBySlide < offsetBySlide) {\n        this.setState({\n          offset: currentOffset,\n        });\n\n        setTimeout(() => {\n          this.setState({\n            animationDuration: 0,\n            offset: lastPositionRealSlide + currentOffset,\n          }, () => {\n            setTimeout(() => {\n              this.setState({ animationDuration });\n            }, animationDuration);\n          });\n        }, animationDuration);\n\n        return;\n      }\n\n      this.setState({\n        offset: currentOffset,\n      });\n    }\n  };\n\n  addCloneSlidesForInfinitySlider = () => {\n    const { step, itemWidth, images: imagesFromServer } = this.props;\n    const imagesWithClones = [\n      ...imagesFromServer.slice(-step),\n      ...imagesFromServer,\n      ...imagesFromServer.slice(0, step),\n    ];\n\n    this.setState({\n      offset: -(itemWidth * step),\n      images: [...imagesWithClones],\n      infinite: true,\n    });\n  };\n\n  updateSlidesList = (isInfinite: boolean): void => {\n    const { images } = this.props;\n\n    if (isInfinite) {\n      this.addCloneSlidesForInfinitySlider();\n\n      return;\n    }\n\n    this.setState({ images, offset: 0, infinite: isInfinite });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      offset,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    const imagesFromServer = this.props.images;\n\n    const widthContainer = itemWidth * frameSize;\n    const maxOffset = -((images.length - step) * itemWidth);\n\n    return (\n      <div\n        className=\"wrapper\"\n      >\n        <div\n          className=\"Carousel\"\n          style={{\n            maxWidth: `${2 * widthContainer}px`,\n          }}\n        >\n          <div\n            className=\"Carousel__wrapper\"\n            style={{\n              width: `${widthContainer}px`,\n            }}\n          >\n            <CarouselList\n              images={images}\n              itemWidth={itemWidth}\n              style={{\n                transform: `translateX(${offset}px)`,\n                transition: `transform ${animationDuration}ms`,\n              }}\n            />\n          </div>\n          <div className=\"Carousel__buttons\">\n            <button\n              type=\"button\"\n              data-cy=\"prev\"\n              onClick={this.handlePrevClick}\n              disabled={!infinite && offset === 0}\n            >\n              Prev\n            </button>\n            <button\n              type=\"button\"\n              data-cy=\"next\"\n              onClick={this.handleNextClick}\n              disabled={!infinite && offset === maxOffset}\n            >\n              Next\n            </button>\n          </div>\n\n          <div className=\"Carousel__properties\">\n            <label htmlFor=\"itemId\">\n              Slider Item Width\n              <input\n                id=\"itemId\"\n                type=\"number\"\n                defaultValue={itemWidth}\n                onChange={\n                  (e) => this.setState({ itemWidth: +e.target.value })\n                }\n              />\n            </label>\n            <label htmlFor=\"frameId\">\n              Slides Per Frame\n              <input\n                id=\"frameId\"\n                type=\"number\"\n                min=\"1\"\n                max={images.length}\n                defaultValue={frameSize}\n                onChange={\n                  (e) => this.setState({\n                    frameSize: +e.target.value,\n                    images: imagesFromServer,\n                  })\n                }\n              />\n            </label>\n            <label htmlFor=\"stepId\">\n              Step\n              <input\n                id=\"stepId\"\n                type=\"number\"\n                defaultValue={step}\n                onChange={\n                  (e) => this.setState({ step: +e.target.value })\n                }\n              />\n            </label>\n            <label htmlFor=\"durationId\">\n              Animation Duration\n              <br />\n              (in ms)\n              <input\n                id=\"durationId\"\n                type=\"number\"\n                defaultValue={animationDuration}\n                onChange={\n                  (e) => this.setState({ animationDuration: +e.target.value })\n                }\n              />\n            </label>\n\n            <label htmlFor=\"infiniteId\">\n              Infinite\n              <input\n                id=\"infiniteId\"\n                type=\"checkbox\"\n                defaultChecked={infinite}\n                onChange={\n                  (e) => this.updateSlidesList(e.target.checked)\n                }\n              />\n            </label>\n\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}